#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W   &kp E          &kp R         &kp T                                                &kp Y        &kp U  &kp I      &kp O    &kp P
&mt LCTRL A       &kp S   &kp D          &lt 3 F       &kp G            &kp LS(LG(S))      &kp MINUS        &kp H        &kp J  &kp K      &kp L    &kp SEMICOLON
&mt LEFT_SHIFT Z  &kp X   &kp C          &kp V         &kp B            &kp GRAVE          &kp SQT          &kp N        &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
&mo 5             &trans  &kp LC(GRAVE)  &kp LEFT_ALT  &mt LCTRL SPACE  &kp LEFT_WIN       &lt 1 BACKSPACE  &lt 2 ENTER                             &kp RIGHT_ALT
            >;

            sensor-bindings = <&inc_dec_kp LG(TAB) LG(LS(TAB))>;
        };

        number {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                         &kp N1     &kp N2     &kp N3         &kp N4            &kp N5
&trans      &trans  &trans  &trans  &trans  &trans      &trans     &kp N6     &kp N7     &kp N8         &kp N9            &kp N0
&trans      &trans  &trans  &trans  &trans  &trans      &kp GRAVE  &kp MINUS  &kp EQUAL  &kp BACKSLASH  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans  &trans  &trans  &trans  &trans      &trans     &trans                                                 &trans
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans                      &trans    &trans    &trans        &trans     &kp DEL
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT  &kp PAGE_UP
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans    &trans    &kp HOME      &kp END    &kp PAGE_DOWN
&trans      &trans  &trans  &trans  &trans  &trans      &trans  &trans                                       &trans
            >;
        };

        FUNCTION {
            bindings = <
&kp CAPSLOCK  &trans  &trans  &trans  &trans                             &kp F1   &kp F2   &kp F3     &kp F4  &kp F5
&trans        &trans  &trans  &trans  &trans  &trans       &trans        &kp F6   &kp F7   &kp F8     &kp F9  &kp F10
&trans        &trans  &trans  &trans  &trans  &kp INS      &kp CAPSLOCK  &kp F11  &kp F12  &kp GRAVE  &trans  &kp SQT
&trans        &trans  &trans  &trans  &trans  &trans       &trans        &trans                               &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans          &trans    &msc SCRL_UP    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &msc SCRL_LEFT  &mkp MB1  &mkp MB3        &mkp MB2  &msc SCRL_RIGHT
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans          &trans    &msc SCRL_DOWN  &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                              &trans
            >;
        };

        BT_CTRL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans  &trans  &trans  &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
